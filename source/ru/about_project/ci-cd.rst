.. _ci-cd:

CI/CD
#####

Проект тестируется, собирается и выкладывается на хостинг автоматически.
Для этого мы используем `GitHub Actions <https://docs.github.com/en/actions>`__.

Бесплатный тариф накладывает свои ограничения, и по этой причине вместо Docker-образа ``sphinxdoc:sphinx`` мы используем образ ``ubuntu:latest``, в который при запуске CI/CD устанавливаются все необходимые DEB- и Python-пакеты.

Всего в проекте две основных ветки:

*  ``develop`` -- основная ветка проекта, куда попадают все PR после прохождения ревью.
   Периодически эта ветка стабилизируется, после чего изменения из неё передаются в ветку ``master``.

*  ``master`` -- ветка, на основе которой собирается стабильная версия сайта.

Существующие Workflow описаны в файлах, хранящихся в каталоге :file:`.github/workflows/`.

*  :file:`testing.yml` -- описание задач тестирования.

   Эти задачи вызываются при создании Pull Request (далее -- PR) и обновлении рабочих веток.
   На этом этапе выполняется:

   *  Сборка Docker-образа.
   *  Сборка проекта в формате ``html`` и проверка валидности ссылок.

   .. note:: Успешное завершение всех этапов автоматического тестирования -- обязательное условие при прохождении ревью.

*  :file:`build-prod.yml` -- сборка стабильной версии проекта.

   Эти задачи выполняются только при внесении изменений в ветку ``master``.
   На этом этапе выполняются:

   #. Сборка проекта в формате ``html``.
   #. Выкладка собранных файлов на хостинг.

   Результат доступен по ссылке: https://techwriters.ru/

*  :file:`build-test.yml` -- сборка тестовой версии проекта.

   Эти задачи выполняются только при внесении изменений в ветку ``develop``.
   На этом этап выполняются:

   #. Сборка проекта в формате ``html``.
   #. Выкладка собранных файлов на хостинг.

   Результат доступен по ссылке: https://test.techwriters.ru/
